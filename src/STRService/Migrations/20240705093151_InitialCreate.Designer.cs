// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using STRService.Models;

#nullable disable

namespace STRService.Migrations
{
    [DbContext(typeof(SwateTemplateDb))]
    [Migration("20240705093151_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("STRService.Models.Downloads", b =>
                {
                    b.Property<string>("TemplateName")
                        .HasColumnType("text");

                    b.Property<int>("TemplateMajorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("TemplateMinorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("TemplatePatchVersion")
                        .HasColumnType("integer");

                    b.Property<string>("TemplatePreReleaseVersionSuffix")
                        .HasColumnType("text");

                    b.Property<string>("TemplateBuildMetadataVersionSuffix")
                        .HasColumnType("text");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("integer");

                    b.HasKey("TemplateName", "TemplateMajorVersion", "TemplateMinorVersion", "TemplatePatchVersion", "TemplatePreReleaseVersionSuffix", "TemplateBuildMetadataVersionSuffix");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("STRService.Models.SwateTemplate", b =>
                {
                    b.Property<string>("TemplateName")
                        .HasColumnType("text");

                    b.Property<int>("TemplateMajorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("TemplateMinorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("TemplatePatchVersion")
                        .HasColumnType("integer");

                    b.Property<string>("TemplatePreReleaseVersionSuffix")
                        .HasColumnType("text");

                    b.Property<string>("TemplateBuildMetadataVersionSuffix")
                        .HasColumnType("text");

                    b.Property<string>("TemplateContent")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("TemplateName", "TemplateMajorVersion", "TemplateMinorVersion", "TemplatePatchVersion", "TemplatePreReleaseVersionSuffix", "TemplateBuildMetadataVersionSuffix");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("STRService.Models.SwateTemplateMetadata", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("MajorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("MinorVersion")
                        .HasColumnType("integer");

                    b.Property<int>("PatchVersion")
                        .HasColumnType("integer");

                    b.Property<string>("PreReleaseVersionSuffix")
                        .HasColumnType("text");

                    b.Property<string>("BuildMetadataVersionSuffix")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Organisation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("ReleaseNotes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name", "MajorVersion", "MinorVersion", "PatchVersion", "PreReleaseVersionSuffix", "BuildMetadataVersionSuffix");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("STRService.Models.SwateTemplateMetadata", b =>
                {
                    b.OwnsMany("STRIndex.Domain+Author", "Authors", b1 =>
                        {
                            b1.Property<string>("SwateTemplateMetadataName")
                                .HasColumnType("text");

                            b1.Property<int>("SwateTemplateMetadataMajorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataMinorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataPatchVersion")
                                .HasColumnType("integer");

                            b1.Property<string>("SwateTemplateMetadataPreReleaseVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<string>("SwateTemplateMetadataBuildMetadataVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Affiliation")
                                .HasColumnType("text");

                            b1.Property<string>("AffiliationLink")
                                .HasColumnType("text");

                            b1.Property<string>("Email")
                                .HasColumnType("text");

                            b1.Property<string>("FullName")
                                .HasColumnType("text");

                            b1.HasKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix", "Id");

                            b1.ToTable("Metadata");

                            b1.ToJson("Authors");

                            b1.WithOwner()
                                .HasForeignKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix");
                        });

                    b.OwnsMany("STRIndex.Domain+OntologyAnnotation", "EndpointRepositories", b1 =>
                        {
                            b1.Property<string>("SwateTemplateMetadataName")
                                .HasColumnType("text");

                            b1.Property<int>("SwateTemplateMetadataMajorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataMinorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataPatchVersion")
                                .HasColumnType("integer");

                            b1.Property<string>("SwateTemplateMetadataPreReleaseVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<string>("SwateTemplateMetadataBuildMetadataVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<string>("TermAccessionNumber")
                                .HasColumnType("text");

                            b1.Property<string>("TermSourceREF")
                                .HasColumnType("text");

                            b1.HasKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix", "Id");

                            b1.ToTable("Metadata");

                            b1.ToJson("EndpointRepositories");

                            b1.WithOwner()
                                .HasForeignKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix");
                        });

                    b.OwnsMany("STRIndex.Domain+OntologyAnnotation", "Tags", b1 =>
                        {
                            b1.Property<string>("SwateTemplateMetadataName")
                                .HasColumnType("text");

                            b1.Property<int>("SwateTemplateMetadataMajorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataMinorVersion")
                                .HasColumnType("integer");

                            b1.Property<int>("SwateTemplateMetadataPatchVersion")
                                .HasColumnType("integer");

                            b1.Property<string>("SwateTemplateMetadataPreReleaseVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<string>("SwateTemplateMetadataBuildMetadataVersionSuffix")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<string>("TermAccessionNumber")
                                .HasColumnType("text");

                            b1.Property<string>("TermSourceREF")
                                .HasColumnType("text");

                            b1.HasKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix", "Id");

                            b1.ToTable("Metadata");

                            b1.ToJson("Tags");

                            b1.WithOwner()
                                .HasForeignKey("SwateTemplateMetadataName", "SwateTemplateMetadataMajorVersion", "SwateTemplateMetadataMinorVersion", "SwateTemplateMetadataPatchVersion", "SwateTemplateMetadataPreReleaseVersionSuffix", "SwateTemplateMetadataBuildMetadataVersionSuffix");
                        });

                    b.Navigation("Authors");

                    b.Navigation("EndpointRepositories");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
